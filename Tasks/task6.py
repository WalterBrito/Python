# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.

even = {}
def fibonacci(n):
    even[n] = even.get(n, 0) or (n <= 1 and 1 or fibonacci(n - 1) + fibonacci(n - 2))
    return even[n]

n = 0
x = 0
while fibonacci(x) <= 4000000:
    if not fibonacci(x) % 2 == 0: n = n + fibonacci(x)
    x += 1
print("Sum: %d" % n)# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.

limit = 4000000
sum, a, b = 0, 1, 1
c = a + b
while c < limit:
    sum += c
    a = b + c
    b = c + a
    c = a + b
print("Sum: %d" % sum)